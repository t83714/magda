apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: authorization-api
spec:
  replicas: {{ .Values.replicas | default 1 }}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.global.rollingUpdate.maxUnavailable | default 0 }}
  template:
    metadata:
      labels:
        service: authorization-api
    spec:
      containers:
      - name: authorization-api
        image: {{ template "dockerimage" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.image.pullPolicy }}
        command: [
            "node",
            "/usr/src/app/component/dist/index.js",
            "--listenPort", "80",
            "--dbHost", "authorization-db",
            "--dbPort", "5432"
        ]
{{- if .Values.global.enableLivenessProbes }}
        livenessProbe:
          httpGet:
            path: /v0/public/users/{{ .Values.global.defaultAdminUserId }}
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: NODE_ENV
          value: production
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: jwt-secret
{{- if .Values.global.noDbAuth }}
        - name: PGUSER
          value: client
{{- else }}
        - name: PGUSER
          value: client
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: db-passwords
              key: authorization-db-client
{{- end }}
