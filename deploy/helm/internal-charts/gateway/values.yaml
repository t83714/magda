image: {}
service:
  type: NodePort
  externalPort: 80
  internalPort: 80

autoscaler:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

enableAuthEndpoint: false
enableWebAccessControl: false
enableCkanRedirection: false

# -- a list of authentication plugin config item. 
# Each authentication plugin config item can contain the following fields:
# <ul>
# <li>`key`: (string) the unique key of the auth plugin. Allowed characters: [a-zA-Z0-9\-] </li>
# <li>`baseUrl`: (string) the `baseUrl` where gateway proxy request to. </li>
# </ul>
# More info on authentication plugin see [Authentication Plugin Specification](https://github.com/magda-io/magda/blob/master/docs/docs/authentication-plugin-spec.md)
authPlugins: []

auth:
  # -- facebook SSO client ID
  # facebook client secret is avaible as `oauth-secrets` [secret](https://kubernetes.io/docs/concepts/configuration/secret/) key `facebook-client-secret` 
  # and config via [create-secrets](https://www.npmjs.com/package/@magda/create-secrets) tool. 
  facebookClientId: ""

  # -- ArcGIS / ESRI SSO client Id
  # ArcGIS client secret is avaible as `oauth-secrets` [secret](https://kubernetes.io/docs/concepts/configuration/secret/) key `arcgis-client-secret` 
  # and config via [create-secrets](https://www.npmjs.com/package/@magda/create-secrets) tool. 
  # **This option is deprecated.** You should use [ArcGIS authentication plugin](https://github.com/magda-io/magda-auth-arcgis) instead.
  arcgisClientId: ""

  # -- ArcGIS / ESRI SSO server Base Url
  # **This option is deprecated.** You should use [ArcGIS authentication plugin](https://github.com/magda-io/magda-auth-arcgis) instead.
  arcgisInstanceBaseUrl: ""

  # -- ArcGIS / ESRI SSO org group
  # **This option is deprecated.** You should use [ArcGIS authentication plugin](https://github.com/magda-io/magda-auth-arcgis) instead.
  esriOrgGroup: ""

  # -- [AAF](https://aaf.edu.au/) SSO client URI
  # AAF client secret is avaible as `oauth-secrets` [secret](https://kubernetes.io/docs/concepts/configuration/secret/) key `aaf-client-secret` 
  # and config via [create-secrets](https://www.npmjs.com/package/@magda/create-secrets) tool. 
  aafClientUri: ""

  # -- Vanguard integration entry point.
  # `vanguardWsFedCertificate` is avaible as `oauth-secrets` [secret](https://kubernetes.io/docs/concepts/configuration/secret/) key `vanguard-certificate` 
  # and config via [create-secrets](https://www.npmjs.com/package/@magda/create-secrets) tool. 
  vanguardWsFedIdpUrl: ""

  # -- Vanguard realm id for entry point.
  vanguardWsFedRealm: ""

helmet:
  frameguard: false

resources:
  requests:
    cpu: 50m
    memory: 40Mi
  limits:
    cpu: 200m

# -- routes list here are available under `/api/v0/` path.
# If empty, the value of `defaultRoutes` will be used. See below.
# @default -- {}
routes: {}

# -- Default routes list here are available under `/api/v0/` path.
# See [Proxy Target Definition](#proxy-target-definition) section below for route format.
# @default -- Default value see [defaultRoutes Default Value](#default-value-for-defaultroutes-field) section below
defaultRoutes:
  search:
    to: http://search-api/v0
    auth: true
  "registry/hooks":
    to: http://registry-api/v0/hooks
    auth: true
  registry:
    to: http://registry-api/v0
    methods:
    - method: get
      target: http://registry-api-read-only/v0
    - method: head
      target: http://registry-api-read-only/v0
    - method: options
      target: http://registry-api-read-only/v0
    - method: post
      target: http://registry-api/v0
    - method: put
      target: http://registry-api/v0
    - method: patch
      target: http://registry-api/v0
    - method: delete
      target: http://registry-api/v0
    auth: true
  registry-read-only:
    to: http://registry-api-read-only/v0
    auth: true
  registry-auth: #left here for legacy reasons - use /registry
    to: http://registry-api/v0
    auth: true
  auth:
    to: http://authorization-api/v0/public
    auth: true
  opa:
    to: http://authorization-api/v0/opa
    auth: true
    statusCheck: false
  admin:
    to: http://admin-api/v0
    auth: true
  content:
    to: http://content-api/v0
    auth: true
  storage:
    to: http://storage-api/v0
    auth: true
  correspondence:
    to: http://correspondence-api/v0/public
  apidocs:
    to: http://apidocs-server/
    redirectTrailingSlash: true
  tenant:
    to: http://tenant-api/v0
    auth: true

# -- extra web routes.
# See [Proxy Target Definition](#proxy-target-definition) section below for route format.
webRoutes:
  preview-map: http://preview-map:6110

# web -- Default web route. 
# This is the last route of the proxy.
# Main UI should be served from here.
web: http://web

defaultWebRouteConfig:
  # -- the default web router proxy target. Optional.
  # If set, the default web route set via `web` option will be ignored.
  to: ""
  # -- array of string. "all" means all methods will be proxied 
  methods: 
  - "GET"
  # -- whether this target requires session. Otherwise, session / password related midddleware won't run
  auth: false
  # -- make /xxx auto redirect to /xxxx/
  redirectTrailingSlash: false

csp:
  browserSniff: false
  directives:
    scriptSrc:
    - "'self'"
    - "'unsafe-inline'"
    - browser-update.org
    - "blob:"
    objectSrc:
    - "'none'"
    workerSrc:
    - "'self'"
    - "blob:"

cors:
  exposedHeaders:
  - "Content-Range"
  - "X-Content-Range"
  - "Accept-Ranges"
  - "Content-Length"
  - "x-magda-event-id"

# -- Session cookie settings. <br/>
# More info: https://github.com/expressjs/session#cookie <br/>
# Supported options are:<br/>
# <ul>
# <li>`expires`: A fix cookie expire date. The expires option should not be set directly; instead only use the maxAge option.</li>
# <li>`httpOnly`: Default: true.</li>
# <li>`maxAge`: Default: 7 * 60 * 60 * 1000 (7 hours)</li>
# <li>`path`: Default: '/'.</li>
# <li>`sameSite`: Default: lax </li>
# <li>`secure`: Default: "auto" </li>
# </ul>
# @default -- default value see `Description`
cookie:
  maxAge: 25200000
  httpOnly: true
  sameSite: "lax"
  secure: "auto"

# defaultCacheControl -- If a response that goes through the gateway doesn't set Cache-Control, it'll be set to this value. Set to null to disable.
defaultCacheControl: "public, max-age=60"

# proxyTimeout -- (int) How long time (in seconds) before upstream service must complete request in order to avoid request timeout error.
# If not set, the request will time out after 120 seconds.
# @default -- nil (120 seconds default value will be used by upstream lib internally)
proxyTimeout: 