apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.global.rollingUpdate.maxUnavailable | default 0 }}
  replicas: {{ .Values.replicas | default 1 }}
  selector:
    matchLabels:
      service: gateway
  template:
    metadata:
      labels:
        service: gateway
    spec:
{{- if and (.Capabilities.APIVersions.Has "scheduling.k8s.io/v1beta1") .Values.global.enablePriorityClass }}
      priorityClassName: magda-10
{{- end }}
      containers:
      - name: gateway
        image: {{ template "dockerimage" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        command: [
            "node",
            "/usr/src/app/component/dist/index.js",
            "--listenPort", "80",
            "--externalUrl", {{ .Values.global.externalUrl | quote }},
            {{- if .Values.ckanRedirectionDomain }}
            "--ckanRedirectionDomain", {{ .Values.ckanRedirectionDomain | quote }},
            {{- end }}
            {{- if .Values.ckanRedirectionPath }}
            "--ckanRedirectionPath", {{ .Values.ckanRedirectionPath | quote }},
            {{- end }}
            "--dbHost", "session-db",
            "--dbPort", "5432",
{{- if .Values.auth.facebookClientId }}
            "--facebookClientId", {{ .Values.auth.facebookClientId | quote }},
{{- end }}
{{- if .Values.auth.arcgisClientId }}
            "--arcgisClientId", {{ .Values.auth.arcgisClientId | quote }},
{{- end }}
{{- if .Values.auth.arcgisInstanceBaseUrl }}
            "--arcgisInstanceBaseUrl", {{ .Values.auth.arcgisInstanceBaseUrl | quote }},
{{- end }}
{{- if .Values.auth.aafClientUri}}
            "--aafClientUri", {{ .Values.auth.aafClientUri| quote }},
{{- end }}
{{- if .Values.auth.esriOrgGroup}}
            "--esriOrgGroup", {{ .Values.auth.esriOrgGroup| quote }},
{{- end }}
{{- if .Values.auth.vanguardWsFedIdpUrl }}
            "--vanguardWsFedIdpUrl", {{ .Values.auth.vanguardWsFedIdpUrl | quote }},
{{- end }}
{{- if .Values.auth.vanguardWsFedRealm }}
            "--vanguardWsFedRealm", {{ .Values.auth.vanguardWsFedRealm | quote }},
{{- end }}
{{- if .Values.enableAuthEndpoint }}
            "--enableAuthEndpoint", {{ .Values.enableAuthEndpoint | quote }},
{{- end }}
{{- if .Values.enableWebAccessControl }}
            "--enableWebAccessControl", {{ .Values.enableWebAccessControl | quote }},
{{- end }}
{{- if .Values.enableHttpsRedirection }}
            "--enableHttpsRedirection", {{ .Values.enableHttpsRedirection | quote }},
{{- end }}
{{- if .Values.enableCkanRedirection }}
            "--enableCkanRedirection", {{ .Values.enableCkanRedirection | quote }},
{{- end }}
            "--proxyRoutesJson", "/etc/config/routes.json",
            "--webProxyRoutesJson", "/etc/config/webRoutes.json",
            "--helmetJson", "/etc/config/helmet.json",
            "--cspJson", "/etc/config/csp.json",
            "--corsJson", "/etc/config/cors.json",
            "--cookieJson", "/etc/config/cookie.json",
            "--authPluginConfigJson", "/etc/config/authPlugins.json",
            "--web", {{ .Values.web | default "http://web" | quote }},
            "--defaultWebRouteConfig", "/etc/config/defaultWebRouteConfig.json",
            "--authorizationApi", "http://authorization-api/v0",
            "--tenantUrl", "http://tenant-api/v0",
{{- if .Values.global.openfaas.mainNamespace }}
            "--openfaasGatewayUrl", {{ include "magda.openfaasGatewayUrl" . | quote }},
            "--openfaasAllowAdminOnly", {{ .Values.global.openfaas.allowAdminOnly | quote }},
{{- end }}
{{- if .Values.global.enableMultiTenants }}
            "--enableMultiTenants", "true",
{{- else }}
            "--enableMultiTenants", "false",
{{- end }}
{{- if .Values.global.magdaAdminPortalName }}
            "--magdaAdminPortalName", {{ .Values.global.magdaAdminPortalName | quote}}
{{- else if .Values.magdaAdminPortalName }}
            "--magdaAdminPortalName", {{ .Values.magdaAdminPortalName | quote}}
{{- end }}
{{- if .Values.defaultCacheControl }}
            "--defaultCacheControl", {{ .Values.defaultCacheControl | quote }},
{{- end }}
{{- if .Values.proxyTimeout }}
            "--proxyTimeout", {{ .Values.proxyTimeout | quote }},
{{- end }}
        ]
        volumeMounts:
          - name: config
            mountPath: /etc/config
{{- if .Values.global.enableLivenessProbes }}
        livenessProbe:
          httpGet:
            path: /status/live
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /status/ready
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: NODE_ENV
          value: production
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: jwt-secret
{{- if .Values.enableWebAccessControl }}
        - name: WEB_ACCESS_USERNAME
          valueFrom:
            secretKeyRef:
              name: web-access-secret
              key: username
        - name: WEB_ACCESS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: web-access-secret
              key: password
{{- end }}
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: session-secret
        - name: USER_ID
          value: {{ .Values.global.defaultAdminUserId }}
{{- if .Values.auth.facebookClientId }}
        - name: FACEBOOK_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: facebook-client-secret
              optional: true
{{- end }}
{{- if .Values.auth.vanguardWsFedRealm }}
        - name: VANGUARD_CERTIFICATE
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: vanguard-certificate
              optional: true
{{- end }}
{{- if .Values.auth.arcgisClientId }}
        - name: ARCGIS_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: arcgis-client-secret
              optional: true
{{- end }}
{{- if .Values.auth.aafClientUri }}
        - name: AAF_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: aaf-client-secret
              optional: true
{{- end }}
{{- if .Values.global.noDbAuth }}
        - name: PGUSER
          value: client
{{- else }}
        - name: PGUSER
          value: client
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: db-passwords
              key: session-db-client
{{- end }}
      volumes:
        - name: config
          configMap:
            name: gateway-config
